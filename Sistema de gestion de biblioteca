''Titulo=Sistema de Gestion de Biblioteca
''Creo una clase Libro con los
''atributos titulo (str), autor (str), isbn (str) y disponible (bool,
''inicialmente True).
class Libro:
    def __init__(self, titulo, autor, isbn):
        self.titulo = titulo
        self.autor = autor
        self.isbn = isbn
        self.disponible = True
''Incluye un método agregar() que permita introducir un nuevo libro
''con sus características.
    def agregar(self):
        print(f"Libro '{self.titulo}' agregado con éxito.")
''Incluye un método prestar() que cambie el estado de disponible a
''False si el libro está disponible, y muestre un mensaje si ya está
´´prestado.
    def prestar(self):
        if self.disponible:
            self.disponible = False
            print(f"Libro '{self.titulo}' prestado con éxito.")
        else:
            print(f"El libro '{self.titulo}' ya está prestado.")
''Incluye un método devolver() que cambie el estado de disponible a
''True si estaba prestado, y muestre un mensaje si ya estaba
''disponible.
    def devolver(self):
        if not self.disponible:
            self.disponible = True
            print(f"Libro '{self.titulo}' devuelto con éxito.")
        else:
            print(f"El libro '{self.titulo}' ya estaba disponible.")
''Incluye un método mostrar() que devuelva una lista con todos los
''libros de la biblioteca y los muestre en pantalla con todos sus datos
''y diga si estás disponible o no.
    def mostrar(self):
        estado = "Sí" if self.disponible else "No"
        return f"- {self.titulo} ({self.autor}) - ISBN: {self.isbn} - Disponible: {estado}"
''Incluye un método buscar() que busque un libro en concreto por su
''ISBM y lo muestre en pantalla con todos sus datos y diga si está
''disponible o no
    def buscar(self):
        estado = "Sí" if self.disponible else "No"
        return f"- {self.titulo} ({self.autor}) - ISBN: {self.isbn} - Disponible: {estado}"

''definicion del menu
def menu():
    print("\nBienvenido al Sistema de Gestión de Biblioteca")
    print("1. Agregar libro")
    print("2. Prestar libro")
    print("3. Devolver libro")
    print("4. Mostrar libros")
    print("5. Buscar libro por ISBN")
    print("6. Salir")
    return input("Elige una opción: ")
''2. Gestión del inventario:
''• Usa una lista para almacenar objetos de la clase Libro

def main():
    inventario = []
''Implementa un bucle que permita al usuario interactuar con el
''programa mediante un menú con las siguientes opciones:
''• a) Agregar un nuevo libro ingresando título, autor e ISBN.

    while True:
        opcion = menu()

        if opcion == "a":
            titulo = input("Título: ")
            autor = input("Autor: ")
            isbn = input("ISBN: ")
            libro = Libro(titulo, autor, isbn)
            libro.agregar()
            inventario.append(libro)
''• b) Prestar un libro buscando por ISBN.

        elif opcion == "b":
            isbn = input("Ingresa el ISBN: ")
            libro_encontrado = None
            for libro in inventario:
                if libro.isbn == isbn:
                    libro_encontrado = libro
                    break
            if libro_encontrado:
                libro_encontrado.prestar()
            else:
                print("Libro no encontrado.")
''• c) Devolver un libro buscando por ISBN.

        elif opcion == "c":
            isbn = input("Ingresa el ISBN: ")
            libro_encontrado = None
            for libro in inventario:
                if libro.isbn == isbn:
                    libro_encontrado = libro
                    break
            if libro_encontrado:
                libro_encontrado.devolver()
            else:
                print("Libro no encontrado.")
''• d) Mostrar todos los libros y su estado (disponible o no).

        elif opcion == "d":
            if not inventario:
                print("No hay libros en el inventario.")
            else:
                for libro in inventario:
                    print(libro.mostrar())

''• e) Salir del programa.
        elif opcion == "6":
            print("Saliendo del programa...")
            break

        else:
            print("Opción inválida. Por favor, elige una opción válida.")


if __name__ == "__main__":
    main()
